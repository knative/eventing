# Copyright 2019 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: imc-controller
  namespace: knative-eventing
  labels:
    eventing.knative.dev/release: devel
    knative.dev/high-availability: "true"
spec:
  selector:
    matchLabels: &labels
      messaging.knative.dev/channel: in-memory-channel
      messaging.knative.dev/role: controller
  template:
    metadata:
      labels: *labels
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels: *labels
              topologyKey: kubernetes.io/hostname
            weight: 100
      serviceAccountName: imc-controller
      enableServiceLinks: false
      containers:
      - name: controller
        image: ko://knative.dev/eventing/cmd/in_memory/channel_controller
        env:
          - name: WEBHOOK_NAME
            value: inmemorychannel-webhook
          - name: WEBHOOK_PORT
            value: "8443"
          - name: CONFIG_LOGGING_NAME
            value: config-logging
          - name: CONFIG_OBSERVABILITY_NAME
            value: config-observability
          - name: METRICS_DOMAIN
            value: knative.dev/inmemorychannel-controller
          - name: SYSTEM_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: DISPATCHER_IMAGE
            value: ko://knative.dev/eventing/cmd/in_memory/channel_dispatcher
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name

        securityContext:
          allowPrivilegeEscalation: false

        ports:
        - name: metrics
          containerPort: 9090
        - name: profiling
          containerPort: 8008
        - name: https-webhook
          containerPort: 8443

        readinessProbe: &probe
          periodSeconds: 1
          httpGet:
            scheme: HTTPS
            port: 8443
            httpHeaders:
              - name: k-kubelet-probe
                value: "webhook"
        livenessProbe:
          <<: *probe
          initialDelaySeconds: 20

      # Our webhook should gracefully terminate by lame ducking first, set this to a sufficiently
      # high value that we respect whatever value it has configured for the lame duck grace period.
      terminationGracePeriodSeconds: 300

---

apiVersion: v1
kind: Service
metadata:
  labels:
    eventing.knative.dev/release: devel
  name: inmemorychannel-webhook
  namespace: knative-eventing
spec:
  ports:
    - name: https-webhook
      port: 443
      targetPort: 8443
  selector:
    messaging.knative.dev/channel: in-memory-channel
    messaging.knative.dev/role: controller
