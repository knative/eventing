# Copyright 2024 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: requestreplies.eventing.knative.dev
  labels:
    knative.dev/crd-install: "true"
    app.kubernetes.io/version: devel
    app.kubernetes.io/name: knative-eventing
spec:
  group: eventing.knative.dev
  versions:
  - name: v1alpha1
    served: true
    storage: true
    subresources:
      status: {}
    schema:
      openAPIV3Schema:
        type: object
        properties:
          spec:
            description: Spec defines the desired state of the RequestReply.
            type: object
            properties:
              brokerRef:
                description: A KReference referring to the broker this RequestReply forwards events to. CrossNamespace references are not allowed.
                type: object
                properties:
                  apiVersion:
                    description: API Version of the broker.
                    type: string
                  kind:
                    description: 'Kind of the broker. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the broker. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
              correlationAttribute:
                description: The name of the cloudevent attribute where the correlation id will be set on new events.
                type: string
              replyAttribute:
                description: The name of the cloudevents attribute which will hold the correlation id for an event which will be treated as a reply.
                type: string
              secrets:
                description: A list of the names of one or more secrets used to sign the correlation ids and reply ids. The secrets must be in the same namespace as the requestreply resource.
                type: array
                items:
                  type: string
              timeout:
                description: A ISO8601 string representing how long RequestReply holds onto an incoming request before it times out without a reply.
                type: string
              delivery:
                description: Delivery contains the delivery spec for each trigger to this Broker. Each trigger delivery spec, if any, overrides this global delivery spec.
                type: object
                properties:
                  backoffDelay:
                    description: 'BackoffDelay is the delay before retrying. More information on Duration format: - https://www.iso.org/iso-8601-date-and-time-format.html - https://en.wikipedia.org/wiki/ISO_8601  For linear policy, backoff delay is backoffDelay*<numberOfRetries>. For exponential policy, backoff delay is backoffDelay*2^<numberOfRetries>.'
                    type: string
                  backoffPolicy:
                    description: BackoffPolicy is the retry backoff policy (linear, exponential).
                    type: string
                  deadLetterSink:
                    description: DeadLetterSink is the sink receiving event that could not be sent to a destination.
                    type: object
                    properties:
                      ref:
                        description: Ref points to an Addressable.
                        type: object
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.'
                            type: string
                      uri:
                        description: URI can be an absolute URL(non-empty scheme and non-empty host) pointing to the target or a relative URI. Relative URIs will be resolved using the base URI retrieved from Ref.
                        type: string
                      CACerts:
                        description: Certification Authority (CA) certificates in PEM format that the source trusts when sending events to the sink.
                        type: string
                      audience:
                        description: Audience is the OIDC audience. This only needs to be set if the target is not an Addressable and thus the Audience can't be received from the target itself. If specified, it takes precedence over the target's Audience.
                        type: string
                  retry:
                    description: Retry is the minimum number of retries the sender should attempt when sending an event before moving it to the dead letter sink.
                    type: integer
                    format: int32
                x-kubernetes-preserve-unknown-fields: true # This is necessary to enable the experimental feature delivery-timeout
          status:
            description: Status represents the current state of the RequestReply. This data may be out of date.
            type: object
            properties:
              annotations:
                description: Annotations is additional Status fields for the Resource to save some additional State as well as convey more information to the user. This is roughly akin to Annotations on any k8s resource, just the reconciler conveying richer information outwards.
                type: object
                x-kubernetes-preserve-unknown-fields: true
              conditions:
                description: Conditions the latest available observations of a resource's current state.
                type: array
                items:
                  type: object
                  required:
                    - type
                    - status
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time the condition transitioned from one status to another. We use VolatileTime in place of metav1.Time to exclude this from creating equality.Semantic differences (all other things held constant).
                      type: string
                    message:
                      description: A human readable message indicating details about the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    severity:
                      description: Severity with which to treat failures of this type of condition. When this is not specified, it defaults to Error.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
              address:
                description: RequestReply is Addressable. It exposes the endpoint as an URI to get events delivered.
                type: object
                properties:
                  name:
                    type: string
                  url:
                    type: string
                  CACerts:
                    type: string
                  audience:
                    type: string
              addresses:
                description: RequestReply is Addressable. It exposes the endpoints as URIs to get events delivered.
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    url:
                      type: string
                    CACerts:
                      type: string
                    audience:
                      type: string
              policies:
                description: List of applied EventPolicies
                type: array
                items:
                  type: object
                  properties:
                    apiVersion:
                      description: The API version of the applied EventPolicy. This indicates whichversion of EventPolicy is supported by the resource.
                      type: string
                    name:
                      description: The name of the applied EventPolicy
                      type: string
              observedGeneration:
                description: ObservedGeneration is the 'Generation' of the Service that was last processed by the controller.
                type: integer
                format: int64

    additionalPrinterColumns:
    - name: URL
      type: string
      jsonPath: ".status.address.url"
    - name: Ready
      type: string
      jsonPath: ".status.conditions[?(@.type==\"Ready\")].status"
    - name: Reason
      type: string
      jsonPath: ".status.conditions[?(@.type==\"Ready\")].reason"
  names:
    kind: RequestReply
    plural: requestreplies
    singular: requestreply
    categories:
      - all
      - knative
      - eventing
  scope: Namespaced
  conversion:
    strategy: Webhook
    webhook:
      conversionReviewVersions: ["v1", "v1beta1"]
      clientConfig:
        service:
          name: eventing-webhook
          namespace: knative-eventing
