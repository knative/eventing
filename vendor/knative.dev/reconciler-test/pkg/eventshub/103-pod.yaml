# Copyright 2020 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: Pod
metadata:
  name: {{ .name }}
  namespace: {{ .namespace }}
  labels:
    app: eventshub-{{ .name }}
  {{ if .annotations }}
  annotations:
    {{ range $key, $value := .annotations }}
      {{ $key }}: "{{ $value }}"
      {{ end }}
  {{ end }}
spec:
  serviceAccountName: "{{ .namespace }}"
  restartPolicy: "OnFailure"
  {{ if .podSecurityContext }}
  securityContext:
    runAsNonRoot: {{ .podSecurityContext.runAsNonRoot }}
    seccompProfile:
      type: {{ .podSecurityContext.seccompProfile.type }}
  {{ end }}
  containers:
    - name: eventshub
      {{ if .withEnforceTLS }}
      volumeMounts:
        - name: tls-certificates
          mountPath: "/etc/tls/certificates"
          readOnly: true
      {{ end }}
      {{ if .containerSecurityContext }}
      securityContext:
        capabilities:
          {{ if .containerSecurityContext.capabilities.drop }}
          drop:
            {{ range $_, $value := .containerSecurityContext.capabilities.drop }}
            - {{ $value }}
            {{ end }}
          {{ end }}
          {{ if .containerSecurityContext.capabilities.add }}
          add:
            {{ range $_, $value := .containerSecurityContext.capabilities.add }}
            - {{ $value }}
            {{ end }}
          {{ end }}
        allowPrivilegeEscalation: {{ .containerSecurityContext.allowPrivilegeEscalation }}
      {{ end }}
      image: {{ .image }}
      imagePullPolicy: "IfNotPresent"
      {{ if .withReadiness }}
      readinessProbe:
        httpGet:
          port: 8080
          path: /health/ready
      {{ end }}
      env:
        - name: "SYSTEM_NAMESPACE"
          valueFrom:
            fieldRef:
              fieldPath: "metadata.namespace"
        - name: "POD_NAME"
          valueFrom:
            fieldRef:
              fieldPath: "metadata.name"
        - name: "EVENT_LOGS"
          value: "recorder,logger"
        {{ range $key, $value := .envs }}
        - name: {{printf "%q" $key}}
          value: {{printf "%q" $value}}
        {{ end }}
  {{ if .withEnforceTLS }}
  volumes:
    - name: tls-certificates
      secret:
        secretName: server-tls-{{ .name }}
        optional: false
  {{ end }}
