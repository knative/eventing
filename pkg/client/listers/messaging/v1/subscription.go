/*
Copyright 2021 The Knative Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

	http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/listers"
	"k8s.io/client-go/tools/cache"
	v1 "knative.dev/eventing/pkg/apis/messaging/v1"
)

// SubscriptionLister helps list Subscriptions.
// All objects returned here must be treated as read-only.
type SubscriptionLister interface {
	// List lists all Subscriptions in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.Subscription, err error)
	// Subscriptions returns an object that can list and get Subscriptions.
	Subscriptions(namespace string) SubscriptionNamespaceLister
	SubscriptionListerExpansion
}

// subscriptionLister implements the SubscriptionLister interface.
type subscriptionLister struct {
	listers.ResourceIndexer[*v1.Subscription]
}

// NewSubscriptionLister returns a new SubscriptionLister.
func NewSubscriptionLister(indexer cache.Indexer) SubscriptionLister {
	return &subscriptionLister{listers.New[*v1.Subscription](indexer, v1.Resource("subscription"))}
}

// Subscriptions returns an object that can list and get Subscriptions.
func (s *subscriptionLister) Subscriptions(namespace string) SubscriptionNamespaceLister {
	return subscriptionNamespaceLister{listers.NewNamespaced[*v1.Subscription](s.ResourceIndexer, namespace)}
}

// SubscriptionNamespaceLister helps list and get Subscriptions.
// All objects returned here must be treated as read-only.
type SubscriptionNamespaceLister interface {
	// List lists all Subscriptions in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.Subscription, err error)
	// Get retrieves the Subscription from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1.Subscription, error)
	SubscriptionNamespaceListerExpansion
}

// subscriptionNamespaceLister implements the SubscriptionNamespaceLister
// interface.
type subscriptionNamespaceLister struct {
	listers.ResourceIndexer[*v1.Subscription]
}
