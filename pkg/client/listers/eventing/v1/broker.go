/*
Copyright 2021 The Knative Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

	http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/listers"
	"k8s.io/client-go/tools/cache"
	v1 "knative.dev/eventing/pkg/apis/eventing/v1"
)

// BrokerLister helps list Brokers.
// All objects returned here must be treated as read-only.
type BrokerLister interface {
	// List lists all Brokers in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.Broker, err error)
	// Brokers returns an object that can list and get Brokers.
	Brokers(namespace string) BrokerNamespaceLister
	BrokerListerExpansion
}

// brokerLister implements the BrokerLister interface.
type brokerLister struct {
	listers.ResourceIndexer[*v1.Broker]
}

// NewBrokerLister returns a new BrokerLister.
func NewBrokerLister(indexer cache.Indexer) BrokerLister {
	return &brokerLister{listers.New[*v1.Broker](indexer, v1.Resource("broker"))}
}

// Brokers returns an object that can list and get Brokers.
func (s *brokerLister) Brokers(namespace string) BrokerNamespaceLister {
	return brokerNamespaceLister{listers.NewNamespaced[*v1.Broker](s.ResourceIndexer, namespace)}
}

// BrokerNamespaceLister helps list and get Brokers.
// All objects returned here must be treated as read-only.
type BrokerNamespaceLister interface {
	// List lists all Brokers in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.Broker, err error)
	// Get retrieves the Broker from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1.Broker, error)
	BrokerNamespaceListerExpansion
}

// brokerNamespaceLister implements the BrokerNamespaceLister
// interface.
type brokerNamespaceLister struct {
	listers.ResourceIndexer[*v1.Broker]
}
