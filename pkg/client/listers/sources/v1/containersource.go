/*
Copyright 2021 The Knative Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

	http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/listers"
	"k8s.io/client-go/tools/cache"
	v1 "knative.dev/eventing/pkg/apis/sources/v1"
)

// ContainerSourceLister helps list ContainerSources.
// All objects returned here must be treated as read-only.
type ContainerSourceLister interface {
	// List lists all ContainerSources in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.ContainerSource, err error)
	// ContainerSources returns an object that can list and get ContainerSources.
	ContainerSources(namespace string) ContainerSourceNamespaceLister
	ContainerSourceListerExpansion
}

// containerSourceLister implements the ContainerSourceLister interface.
type containerSourceLister struct {
	listers.ResourceIndexer[*v1.ContainerSource]
}

// NewContainerSourceLister returns a new ContainerSourceLister.
func NewContainerSourceLister(indexer cache.Indexer) ContainerSourceLister {
	return &containerSourceLister{listers.New[*v1.ContainerSource](indexer, v1.Resource("containersource"))}
}

// ContainerSources returns an object that can list and get ContainerSources.
func (s *containerSourceLister) ContainerSources(namespace string) ContainerSourceNamespaceLister {
	return containerSourceNamespaceLister{listers.NewNamespaced[*v1.ContainerSource](s.ResourceIndexer, namespace)}
}

// ContainerSourceNamespaceLister helps list and get ContainerSources.
// All objects returned here must be treated as read-only.
type ContainerSourceNamespaceLister interface {
	// List lists all ContainerSources in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.ContainerSource, err error)
	// Get retrieves the ContainerSource from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1.ContainerSource, error)
	ContainerSourceNamespaceListerExpansion
}

// containerSourceNamespaceLister implements the ContainerSourceNamespaceLister
// interface.
type containerSourceNamespaceLister struct {
	listers.ResourceIndexer[*v1.ContainerSource]
}
