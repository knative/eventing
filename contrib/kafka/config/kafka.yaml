# Copyright 2018 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: eventing.knative.dev/v1alpha1
kind: ClusterChannelProvisioner
metadata:
  name: kafka
spec: {}
---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: kafka-channel-controller
  namespace: knative-eventing
---

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kafka-channel-controller
rules:
  - apiGroups:
      - eventing.knative.dev
    resources:
      - channels
      - channels/status
      - clusterchannelprovisioners
      - clusterchannelprovisioners/status
    verbs:
      - get
      - list
      - watch
      - update
  - apiGroups:
      - "" # Core API group.
    resources:
      - services
      - configmaps
    verbs:
      - get
      - list
      - watch
      - create
  - apiGroups:
      - "" # Core API group.
    resources:
      - services
    verbs:
      - update
  - apiGroups:
      - "" # Core API Group.
    resources:
      - configmaps
    resourceNames:
      - kafka-channel-dispatcher
    verbs:
      - update
  - apiGroups:
      - "" # Core API Group.	
    resources:
      - events	
    verbs:
      - create	
      - patch	
      - update
---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kafka-channel-controller-manage
subjects:
  - kind: ServiceAccount
    name: kafka-channel-controller
    namespace: knative-eventing
roleRef:
  kind: ClusterRole
  name: kafka-channel-controller
  apiGroup: rbac.authorization.k8s.io
---

apiVersion: v1
kind: ConfigMap
metadata:
  name: kafka-channel-controller-config
  namespace: knative-eventing
data:
  # Broker URL's for the provisioner. Replace this with the URL's for your kafka cluster,
  # which is in the format of my-cluster-kafka-bootstrap.my-kafka-namespace:9092.
  bootstrap_servers: REPLACE_WITH_CLUSTER_URL

  # Consumer mode to dispatch events from different partitions in parallel.
  # By default(multiplex), partitions are multiplexed with a single go channel.
  # `multiplex` and `partitions` are valid values.
  ## consumer_mode: partitions
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-channel-controller
  namespace: knative-eventing
spec:
  replicas: 1
  selector:
    matchLabels: &labels
      app: kafka-channel-controller
  template:
    metadata:
      labels: *labels
    spec:
      serviceAccountName: kafka-channel-controller
      containers:
      - name: kafka-channel-controller-controller
        image: github.com/knative/eventing/contrib/kafka/cmd/controller
        volumeMounts:
          - name: kafka-channel-controller-config
            mountPath: /etc/config-provisioner
        env:
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
      volumes:
        - name: kafka-channel-controller-config
          configMap:
            name: kafka-channel-controller-config
---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: kafka-channel-dispatcher
  namespace: knative-eventing

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kafka-channel-dispatcher
  namespace: knative-eventing
rules:
  - apiGroups:
      - "" # Core API group.
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - eventing.knative.dev
    resources:
      - channels
    verbs:
      - list
      - watch

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kafka-channel-dispatcher
  namespace: knative-eventing
subjects:
  - kind: ServiceAccount
    name: kafka-channel-dispatcher
    namespace: knative-eventing
roleRef:
  kind: ClusterRole
  name: kafka-channel-dispatcher
  apiGroup: rbac.authorization.k8s.io

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-channel-dispatcher
  namespace: knative-eventing
spec:
  replicas: 1
  selector:
    matchLabels: &labels
      clusterChannelProvisioner: kafka
      role: dispatcher
  template:
    metadata:
      labels: *labels
    spec:
      serviceAccountName: kafka-channel-dispatcher
      containers:
        - name: dispatcher
          image: github.com/knative/eventing/contrib/kafka/cmd/dispatcher
          env:
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          volumeMounts:
            - name: kafka-channel-controller-config
              mountPath: /etc/config-provisioner
      volumes:
        - name: kafka-channel-controller-config
          configMap:
            name: kafka-channel-controller-config
