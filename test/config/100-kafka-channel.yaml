# Copyright 2019 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kafka-addressable-resolver
  labels:
    contrib.eventing.knative.dev/release: "v0.17.2"
    duck.knative.dev/addressable: "true"
# Do not use this role directly. These rules will be added to the "addressable-resolver" role.
rules:
- apiGroups:
  - messaging.knative.dev
  resources:
  - kafkachannels
  - kafkachannels/status
  verbs:
  - get
  - list
  - watch

---
# Copyright 2019 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kafka-channelable-manipulator
  labels:
    contrib.eventing.knative.dev/release: "v0.17.2"
    duck.knative.dev/channelable: "true"
# Do not use this role directly. These rules will be added to the "channelable-manipulator" role.
rules:
- apiGroups:
  - messaging.knative.dev
  resources:
  - kafkachannels
  - kafkachannels/status
  verbs:
  - create
  - get
  - list
  - watch
  - update
  - patch

---
# Copyright 2019 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kafka-ch-controller
  labels:
    contrib.eventing.knative.dev/release: "v0.17.2"
rules:
- apiGroups:
  - messaging.knative.dev
  resources:
  - kafkachannels
  - kafkachannels/status
  verbs:
  - get
  - list
  - watch
  - update
  - patch
- apiGroups:
  - messaging.knative.dev
  resources:
  - kafkachannels/finalizers
  verbs:
  - update
- apiGroups:
  - "" # Core API group.
  resources:
  - services
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
- apiGroups:
  - "" # Core API group.
  resources:
  - services
  verbs: &everything
  - get
  - list
  - watch
  - create
  - patch
  - update
- apiGroups:
  - "" # Core API Group.
  resources:
  - configmaps
  resourceNames:
  - kafka-ch-dispatcher
  verbs:
  - update
- apiGroups:
  - "" # Core API Group.
  resources:
  - events
  verbs:
  - create
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - "" # Core API group.
  resources:
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - deployments
  - deployments/status
  verbs: *everything
- apiGroups:
  - "" # Core API group.
  resources:
  - serviceaccounts
  verbs: *everything
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  verbs: *everything
- apiGroups:
  - "coordination.k8s.io"
  resources:
  - leases
  verbs: *everything

---
# Copyright 2020 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: ServiceAccount
metadata:
  name: kafka-ch-controller
  namespace: knative-eventing
  labels:
    contrib.eventing.knative.dev/release: "v0.17.2"

---
# Copyright 2019 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kafka-ch-dispatcher
  labels:
    contrib.eventing.knative.dev/release: "v0.17.2"
rules:
- apiGroups:
  - messaging.knative.dev
  resources:
  - kafkachannels
  verbs:
  - get
  - list
  - watch
  - patch
- apiGroups:
  - messaging.knative.dev
  resources:
  - kafkachannels/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - "" # Core API group.
  resources:
  - events
  verbs:
  - create
  - patch
  - update
- apiGroups:
  - messaging.knative.dev
  resources:
  - kafkachannels
  verbs:
  - get
  - list
  - watch
  - patch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - "" # Core API Group.
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - "coordination.k8s.io"
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - patch
  - update

---
# Copyright 2020 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: ServiceAccount
metadata:
  name: kafka-ch-dispatcher
  namespace: knative-eventing
  labels:
    contrib.eventing.knative.dev/release: "v0.17.2"

---
# Copyright 2019 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kafka-webhook
  labels:
    contrib.eventing.knative.dev/release: "v0.17.2"
rules:
- # For watching logging configuration and getting certs.
  apiGroups:
  - ""
  resources:
  - "configmaps"
  verbs:
  - "get"
  - "list"
  - "watch"
- # For manipulating certs into secrets.
  apiGroups:
  - ""
  resources:
  - "secrets"
  verbs:
  - "get"
  - "create"
  - "list"
  - "watch"
  - "update"
- # For getting our Deployment so we can decorate with ownerref.
  apiGroups:
  - "apps"
  resources:
  - "deployments"
  verbs:
  - "get"
- apiGroups:
  - "apps"
  resources:
  - "deployments/finalizers"
  verbs:
  - update
- # For actually registering our webhook.
  apiGroups:
  - "admissionregistration.k8s.io"
  resources:
  - "mutatingwebhookconfigurations"
  - "validatingwebhookconfigurations"
  verbs: &everything
  - "get"
  - "list"
  - "create"
  - "update"
  - "delete"
  - "patch"
  - "watch"
- # Our own resources and statuses we care about.
  apiGroups:
  - "messaging.knative.dev"
  resources:
  - "kafkachannels"
  - "kafkachannels/status"
  verbs:
  - "get"
  - "list"
  - "watch"
- # For leader election
  apiGroups:
  - "coordination.k8s.io"
  resources:
  - "leases"
  verbs: *everything
- # Necessary for conversion webhook. These are copied from the serving
  # TODO: Do we really need all these permissions?
  apiGroups:
  - "apiextensions.k8s.io"
  resources:
  - "customresourcedefinitions"
  verbs:
  - "get"
  - "list"
  - "create"
  - "update"
  - "delete"
  - "patch"
  - "watch"

---
# Copyright 2020 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kafka-webhook
  namespace: knative-eventing
  labels:
    contrib.eventing.knative.dev/release: "v0.17.2"

---
# Copyright 2019 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kafka-ch-controller
  labels:
    contrib.eventing.knative.dev/release: "v0.17.2"
subjects:
- kind: ServiceAccount
  name: kafka-ch-controller
  namespace: knative-eventing
roleRef:
  kind: ClusterRole
  name: kafka-ch-controller
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kafka-ch-dispatcher
  labels:
    contrib.eventing.knative.dev/release: "v0.17.2"
subjects:
- kind: ServiceAccount
  name: kafka-ch-dispatcher
  namespace: knative-eventing
roleRef:
  kind: ClusterRole
  name: kafka-ch-dispatcher
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kafka-webhook
  labels:
    contrib.eventing.knative.dev/release: "v0.17.2"
subjects:
- kind: ServiceAccount
  name: kafka-webhook
  namespace: knative-eventing
roleRef:
  kind: ClusterRole
  name: kafka-webhook
  apiGroup: rbac.authorization.k8s.io

---
# Copyright 2019 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: kafkachannels.messaging.knative.dev
  labels:
    contrib.eventing.knative.dev/release: "v0.17.2"
    knative.dev/crd-install: "true"
    messaging.knative.dev/subscribable: "true"
    duck.knative.dev/addressable: "true"
spec:
  group: messaging.knative.dev
  preserveUnknownFields: false
  validation:
    openAPIV3Schema:
      type: object
      # this is a work around so we don't need to flush out the
      # schema for each version at this time
      #
      # see issue: https://github.com/knative/serving/issues/912
      x-kubernetes-preserve-unknown-fields: true
  names:
    kind: KafkaChannel
    plural: kafkachannels
    singular: kafkachannel
    categories:
    - all
    - knative
    - messaging
    - channel
    shortNames:
    - kc
  scope: Namespaced
  subresources:
    status: {}
  additionalPrinterColumns:
  - name: Ready
    type: string
    JSONPath: ".status.conditions[?(@.type==\"Ready\")].status"
  - name: Reason
    type: string
    JSONPath: ".status.conditions[?(@.type==\"Ready\")].reason"
  - name: URL
    type: string
    JSONPath: .status.address.url
  - name: Age
    type: date
    JSONPath: .metadata.creationTimestamp
  versions:
  - name: v1alpha1
    served: true
    storage: true
  - name: v1beta1
    served: true
    storage: false
  conversion:
    strategy: Webhook
    conversionReviewVersions: ["v1beta1", "v1alpha1"]
    webhookClientConfig:
      service:
        name: kafka-webhook
        namespace: knative-eventing

---
# Copyright 2019 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: ConfigMap
metadata:
  name: config-kafka
  namespace: knative-eventing
data:
  # Broker URL. Replace this with the URLs for your kafka cluster,
  # which is in the format of my-cluster-kafka-bootstrap.my-kafka-namespace:9092.
  bootstrapServers: my-cluster-kafka-bootstrap.kafka:9092

---
# Copyright 20 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: ConfigMap
metadata:
  name: config-leader-election-kafka
  namespace: knative-eventing
data:
  # An inactive but valid configuration follows; see example.
  resourceLock: "leases"
  leaseDuration: "15s"
  renewDeadline: "10s"
  retryPeriod: "2s"
  _example: |
    ################################
    #                              #
    #    EXAMPLE CONFIGURATION     #
    #                              #
    ################################

    # This block is not actually functional configuration,
    # but serves to illustrate the available configuration
    # options and document them in a way that is accessible
    # to users that `kubectl edit` this config map.
    #
    # These sample configuration options may be copied out of
    # this example block and unindented to be in the data block
    # to actually change the configuration.

    # resourceLock controls which API resource is used as the basis for the
    # leader election lock. Valid values are:
    #
    # - leases -> use the coordination API
    # - configmaps -> use configmaps
    # - endpoints -> use endpoints
    resourceLock: "leases"

    # leaseDuration is how long non-leaders will wait to try to acquire the
    # lock; 15 seconds is the value used by core kubernetes controllers.
    leaseDuration: "15s"
    # renewDeadline is how long a leader will try to renew the lease before
    # giving up; 10 seconds is the value used by core kubernetes controllers.
    renewDeadline: "10s"
    # retryPeriod is how long the leader election client waits between tries of
    # actions; 2 seconds is the value used by core kuberntes controllers.
    retryPeriod: "2s"
    # enabledComponents is a comma-delimited list of component names for which
    # leader election is enabled. Valid values are:
    #
    # - kafkachannel-dispatcher
    # - kafkachannel-controller
    enabledComponents: "kafkachannel-dispatcher,kafkachannel-controller"

---
# Copyright 2019 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: Service
metadata:
  name: kafka-webhook
  namespace: knative-eventing
  labels:
    contrib.eventing.knative.dev/release: "v0.17.2"
    role: kafka-webhook
spec:
  ports:
  - name: https-webhook
    port: 443
    targetPort: 8443
  selector:
    role: kafka-webhook

---
# Copyright 2019 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-ch-controller
  namespace: knative-eventing
  labels:
    contrib.eventing.knative.dev/release: "v0.17.2"
spec:
  replicas: 1
  selector:
    matchLabels: &labels
      messaging.knative.dev/channel: kafka-channel
      messaging.knative.dev/role: controller
  template:
    metadata:
      labels: *labels
    spec:
      serviceAccountName: kafka-ch-controller
      containers:
      - name: controller
        image: gcr.io/knative-releases/knative.dev/eventing-contrib/kafka/channel/cmd/channel_controller@sha256:561aab7a40c20d5bda514ba4fb80d129ae3daefe752f4632bc479159736eb67f
        env:
        - name: CONFIG_LOGGING_NAME
          value: config-logging
        - name: METRICS_DOMAIN
          value: knative.dev/eventing
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: CONFIG_LEADERELECTION_NAME
          value: config-leader-election-kafka
        - name: DISPATCHER_IMAGE
          value: gcr.io/knative-releases/knative.dev/eventing-contrib/kafka/channel/cmd/channel_dispatcher@sha256:a5c5f4709220b039bfaf4636455576dc8ac6bd23dac8605627e38e8a9e6d4ac4
        ports:
        - containerPort: 9090
          name: metrics
        volumeMounts:
        - name: config-logging
          mountPath: /etc/config-logging
      volumes:
      - name: config-logging
        configMap:
          name: config-logging

---
# Copyright 2019 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  name: defaulting.webhook.kafka.messaging.knative.dev
  labels:
    contrib.eventing.knative.dev/release: "v0.17.2"
webhooks:
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    service:
      name: kafka-webhook
      namespace: knative-eventing
  failurePolicy: Fail
  name: defaulting.webhook.kafka.messaging.knative.dev
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  name: validation.webhook.kafka.messaging.knative.dev
  labels:
    contrib.eventing.knative.dev/release: "v0.17.2"
webhooks:
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    service:
      name: kafka-webhook
      namespace: knative-eventing
  failurePolicy: Fail
  name: validation.webhook.kafka.messaging.knative.dev
---
apiVersion: v1
kind: Secret
metadata:
  name: messaging-webhook-certs
  namespace: knative-eventing
  labels:
    contrib.eventing.knative.dev/release: "v0.17.2"
# The data is populated at install time.

---
# Copyright 2019 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-webhook
  namespace: knative-eventing
  labels:
    contrib.eventing.knative.dev/release: "v0.17.2"
spec:
  replicas: 1
  selector:
    matchLabels: &labels
      app: kafka-webhook
      role: kafka-webhook
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      labels: *labels
    spec:
      serviceAccountName: kafka-webhook
      containers:
      - name: kafka-webhook
        terminationMessagePolicy: FallbackToLogsOnError
        image: gcr.io/knative-releases/knative.dev/eventing-contrib/kafka/channel/cmd/webhook@sha256:08b1d3c92a097ab5865892df01bb1d9dd292a3c4c1b10886ad508005d03f1ed0
        env:
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: CONFIG_LOGGING_NAME
          value: config-logging
        - name: METRICS_DOMAIN
          value: knative.dev/eventing
        - name: WEBHOOK_NAME
          value: kafka-webhook
        - name: WEBHOOK_PORT
          value: "8443"
        ports:
        - name: https-webhook
          containerPort: 8443
        - name: metrics
          containerPort: 9090
        - name: profiling
          containerPort: 8008
        # TODO set proper resource limits.

        readinessProbe: &probe
          periodSeconds: 1
          httpGet:
            scheme: HTTPS
            port: 8443
            httpHeaders:
            - name: k-kubelet-probe
              value: "webhook"
        livenessProbe: *probe
      # Our webhook should gracefully terminate by lame ducking first, set this to a sufficiently
      # high value that we respect whatever value it has configured for the lame duck grace period.
      terminationGracePeriodSeconds: 300

---
