# Copyright 2019 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: ConfigMap
metadata:
  name: config-mako
  namespace: default
data:
  dev.config: |
    ### Creating this benchmark:
    # mako create_benchmark test/performance/channel-imc/dev.config
    ### Updating this benchmark:
    # mako update_benchmark test/performance/channel-imc/dev.config

    project_name: "Knative"
    benchmark_name: "Development - Channel Latency & Throughput"
    description: "Measure latency and throughput of channels."
    benchmark_key: '5683818216292352'

    # Human owners for manual benchmark adjustments.
    owner_list: "grantrodgers@google.com"
    owner_list: "chizhg@google.com"
    owner_list: "xiyue@google.com"
    owner_list: "gracegao@google.com"
    owner_list: "nachocano@google.com"
    owner_list: "cshou@google.com"

    # Anyone can add their IAM robot here to publish to this benchmark.
    owner_list: "mako-job@knative-performance.iam.gserviceaccount.com"
    owner_list: "mako-job@knative-eventing-performance.iam.gserviceaccount.com"
    # This is grantrodgers' robot:
    owner_list: "mako-upload@grantrodgers-crd.iam.gserviceaccount.com"
    owner_list: "mako-upload@xiyue-knative-project.iam.gserviceaccount.com"
    owner_list: "mako-upload@gracegao-knative-gcp-testing.iam.gserviceaccount.com"
    owner_list: "mako-upload@knative-project-228222.iam.gserviceaccount.com"
    owner_list: "mako-upload@cshou-playground.iam.gserviceaccount.com"

    # Define the name and type for x-axis of run charts
    input_value_info: {
      value_key: "t"
      label: "time"
      type: TIMESTAMP
    }

    # Note: value_key is stored repeatedly and should be very short (ideally one or two characters).
    metric_info_list: {
      value_key: "pl"
      label: "publish-latency"
    }
    metric_info_list: {
      value_key: "pe"
      label: "publish-errors"
    }
    metric_info_list: {
      value_key: "st"
      label: "send-throughput"
    }
    metric_info_list: {
      value_key: "dl"
      label: "deliver-latency"
    }
    metric_info_list: {
      value_key: "de"
      label: "deliver-errors"
    }
    metric_info_list: {
      value_key: "dt"
      label: "deliver-throughput"
    }
    metric_info_list: {
      value_key: "ft"
      label: "failure-throughput"
    }

---

apiVersion: v1
kind: Service
metadata:
  name: channel-imc-consumer
  namespace: default
spec:
  selector:
    role: channel-imc-consumer
  ports:
    - protocol: TCP
      port: 80
      targetPort: cloudevents
      name: http

---

apiVersion: v1
kind: Service
metadata:
  name: channel-imc-aggregator
  namespace: default
spec:
  selector:
    role: channel-imc-aggregator
  ports:
    - name: grpc
      port: 10000
      targetPort: grpc
      protocol: TCP

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: perf-eventing
  namespace: default

---

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: perf-eventing
rules:
  - apiGroups: [""]
    resources: ["nodes", "pods"]
    verbs: ["list"]

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: perf-eventing
subjects:
  - kind: ServiceAccount
    name: perf-eventing
    namespace: default
roleRef:
  kind: ClusterRole
  name: perf-eventing
  apiGroup: rbac.authorization.k8s.io

---

apiVersion: messaging.knative.dev/v1alpha1
kind: InMemoryChannel
metadata:
  name: channel-imc
  namespace: default

---


apiVersion: messaging.knative.dev/v1alpha1
kind: Subscription
metadata:
  name: channel-imc-sub
  namespace: default
spec:
  channel:
    apiVersion: messaging.knative.dev/v1alpha1
    kind: InMemoryChannel
    name: channel-imc
  subscriber:
    ref:
      apiVersion: v1
      kind: Service
      name: channel-imc-consumer
